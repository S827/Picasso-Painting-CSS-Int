body {
    background-color: rgb(184, 132, 46);
}
/* Give the back-wall element a width of 100% and a height of 60%. */
#back-wall {
    background-color: #8B4513;
    width: 100%;
    height: 60%;
    /* Set the position property for the back-wall element to absolute. 
    An absolute position takes the element out of that top-down document flow and allows you to adjust it relative to its container. */
    position: absolute;
    /* When an element is manually positioned, you can shift its layout with 
    top, left, right, and bottom. Set the back-wall to have a top value of 0, and a left value of 0. */
    top: 0;
    left: 0;
    /* The z-index property is used to create "layers" for your HTML elements. If you are familiar with image editing tools, 
    you may have worked with layers before. This is a similar concept.
    Elements with a higher z-index value will appear to be layered on top of elements with a lower z-index value. 
    This can be combined with the positioning in the previous lesson to create unique effects.
    Since the back-wall element will need to appear "behind" the other elements you will be creating, 
    give the back-wall element a z-index of -1. */
    z-index: -1;
  }

  /* Using an id selector, create a rule for your offwhite-character element. 
  Give it a width of 300px, a height of 550px, and a background-color of GhostWhite. */
  #offwhite-character {
    width: 300px;
    height: 550px;
    background-color: ghostwhite;
    /* Move the offwhite-character into place by giving it a position of absolute, a top value of 20%, and a left value of 17.5%. */
    position: absolute;
    top: 20%;
    left: 17.5%;
  }

  /* Using an id selector, style your white-hat element. Give it a width and height of 0, and a border-style of solid. */
  #white-hat {
    width: 0;
    height: 0;
    border-style: solid;
    /* That does not look quite right. Set a border-width of 0 120px 140px 180px to size the hat properly. */
    border-width: 0 120px 140px 180px;
    /* Now you have a large box. Give it a border-top-color, border-right-color, and border-left-color of transparent. 
    Set the border-bottom-color to GhostWhite. This will make it look more like a hat. */
    border-color: transparent transparent ghostwhite transparent;
    /* Give the hat a position of absolute, a top value of -140px, and a left value of 0. */
    position: absolute;
    top: -140px;
    left: 0;
  }

  /* Using an id selector, create a rule for your black-mask element. 
  Give it a width of 100%, a height of 50px, and a background-color of rgb(45, 31, 19). */
  #black-mask {
    width: 100%;
    height: 50px;
    background-color: rgb(45, 31, 19);
    /* Give the mask a position of absolute, and a top and left value of 0. */
    position: absolute;
    top: 0;
    left: 0;
    /* To ensure you can see the mask, give it a z-index of 1. */
    z-index: 1;
  }

  /* Using an id selector, give your gray-instrument element a width of 15%, 
  a height of 40%, and a background-color of rgb(167, 162, 117). */
  #gray-instrument {
    width: 15%;
    height: 40%;
    background-color: rgb(167, 162, 117);
    /* Now move it into place with a position of absolute, a top value of 50px, and a left value of 125px. */
    position: absolute;
    top: 50px;
    left: 125px;
    /* Set the z-index to 1. */
    z-index: 1;
  }

  /* Use a class selector to create a rule for the black-dot elements. 
  Set the width to 10px, the height to 10px, and the background-color to rgb(45, 31, 19). */
  .black-dot {
    width: 10px;
    height: 10px;
    background-color: rgb(45, 31, 19);
    /* These dots are just a little too square. Give the black-dot class a border-radius of 50% to fix it. */
    border-radius: 50%;
    /* Move the dots into place by setting the display to block, the margin to auto, and the margin-top to 65%. */
    display: block;
    margin: auto;
    margin-top: 65%;
  }

  /* Use an id selector to style your tan-table element. Give it a width of 450px, a height of 140px, and a background-color of #D2691E. */
  #tan-table {
    width: 450px;
    height: 140px;
    background-color: #D2691E;
    /* Move the table into place by giving it a position of absolute, a top value of 275px, and a left value of 15px. */
    position: absolute;
    top: 275px;
    left: 15px;
    /* Give the table a z-index of 1. */
    z-index: 1;
  }

  /* Use an id selector to create a rule for your black-character element. 
  Set the width to 300px, the height to 500px, and the background-color to rgb(45, 31, 19). */
  #black-character{
    width: 300px;
    height: 500px;
    background-color: rgb(45, 31, 19);
    /* Move the black-character element into place by setting the position to absolute, the top to 30%, and the left to 59%. */
    position: absolute;
    top: 30%;
    left: 59%;
  }

  /* Use an id selector to create a rule for your black-hat element. Give it a width of 0, a height of 0, and a border-style of solid. */
  #black-hat {
    width: 0;
    height: 0;
    border-style: solid;
    /* Set the border-width of the black-hat to 150px 0 0 300px. */
    border-width: 150px 0 0 300px;
    /* Just like with your white-hat, you should style the border for the black-hat element. 
    Give it a border-top-color, border-right-color, and border-bottom-color of transparent. Set the border-left-color to rgb(45, 31, 19). */
    border-color: transparent transparent transparent rgb(45, 31, 19);
    /* Now position the black-hat element. Give it a position of absolute, with a top of -150px and a left of 0. */
    position: absolute;
    top: -150px;
    left: 0;
  }

  /* Using an id selector, style the gray-mask element. 
  Give it a width of 150px, a height of 150px, and a background-color of rgb(167, 162, 117). */
  #gray-mask {
    width: 150px;
    height: 150px;
    background-color: rgb(167, 162, 117);
    /* Position the gray-mask by setting position to absolute, the top to -10px, and the left to 70px. */
    position: absolute;
    top: -10px;
    left: 70px;
  }

  /* Using an id selector, create a rule for the white-paper element. 
  Set the width to 400px, the height to 100px, and the background-color to GhostWhite. */
  #white-paper {
    width: 400px;
    height: 100px;
    background-color: ghostwhite;
    /* Give the white-paper a position of absolute, a top of 250px, and a left of -150px to move it into place. */
    position: absolute;
    top: 250px;
    left: -150px;
    /* Set the z-index of the white-paper to 1. */
    z-index: 1;
  }

  /* FontAwesome icons come with their own styling to define the icon. 
  However, you can still set the styling yourself as well, to change things like the color and size. 
  For now, use a class selector to target your fa-music icons. Set the display to inline-block, 
  the margin-top to 8%, and the margin-left to 13%. */
  .fa-music {
    display: inline-block;
    margin-top: 8%;
    margin-left: 13%;
  }

  /* Use a class selector to target your new blue elements. Set the background-color to #1E90FF. */
  .blue  {
    background-color: #1e90ff;
    
  }

  /* Select the blue-left element with an id selector. Give it a width of 500px and a height of 300px. */
  #blue-left {
    width: 500px;
    height: 300px;
    /* Now set the position to absolute, the top to 20%, and the left to 20%. */
    position: absolute;
    top: 20%;
    left: 20%;
  }

  /* Next, target your blue-right element with an id selector. Set the width to 400px and the height to 300px. */
  #blue-right {
    width: 400px;
    height: 300px;
    /* Give the blue-right the correct positioning with position set to absolute, top set to 50%, and left set to 40%. */
    position: absolute;
    top: 50%;
    left: 40%;
  }

  /* Select your orange-character element with an id selector. Give it a width of 250px, 
  a height of 550px, and a background-color of rgb(240, 78, 42). */
  #orange-character {
    width: 250px;
    height: 550px;
    background-color: rgb(240, 78, 42);
    /* Give the orange-character a position of absolute, a top of 25%, and a left of 40%. */
    position: absolute;
    top: 25%;
    left: 40%;
  }

  /* Style your black-round-hat element with an id selector. Set the width to 180px, 
  the height to 150px, and the background-color to rgb(45, 31, 19). */
  #black-round-hat {
    width: 180px;
    height: 150px;
    background-color: rgb(45, 31, 19);
    /* The black-round-hat should probably be round. Give it a border-radius of 50% to fix this. */
    border-radius: 50%;
    /* Move the black-round-hat into place with a position of absolute, a top of -100px, and a left of 5px. */
    position: absolute;
    top: -100px;
    left: 5px;
    /* Put the black-round-hat on the correct layer with a z-index of -1. */
    z-index: -1;
  }

  /* Use an id selector to create a rule for your eyes-div element. Set the width to 180px and the height to 50px. */
  #eys-div {
    width: 180px;
    height: 50px;
    /* Now move the eyes-div into position with position set to absolute, top set to -40px, and left set to 20px. */
    position: absolute;
    top: -40px;
    left: 20px;
    /* Give the eyes-div a z-index of 3. */
    z-index: 3;
  }

  /* Target your triangles element with an id selector. Set the width to 250px and the height to 550px. */
  #triangles {
    width: 250px;
    height: 550px;
  }

  /* Create a class selector for your triangle elements. Set the width to 0 and the height to 0. */
  .triangle {
    width: 0;
    height: 0;
    /* Style the border of your triangle elements. Set the border-style to solid and the border-width to 42px 45px 45px 0. */
    border-style: solid;
    border-width: 42px 45px 45px 0;
    /* Give your triangle elements the correct color. Set the border-top-color, border-bottom-color, 
    and border-left-color to transparent. Set the border-right-color to Gold. */
    border-top-color: transparent;
    border-bottom-color: transparent;
    border-left-color: transparent;
    border-right-color: Gold;
    /* Adjust the layout of the triangle elements with a display of inline-block. */
    display: inline-block;
  }

  /* Now use an id selector for guitar. Set the width to 100%, and the height to 100px. */
  #guitar {
    width: 100%;
    height: 100px;
    /* In the same #guitar selector, set the position to absolute, the top to 120px, and the left to 0px. */
    position: absolute;
    top: 120px;
    left: 0px;
    /* Give the #guitar rule a z-index of 3. */
    z-index: 3;
  }

  /* Now use a class selector to target guitar. This will style the two "halves" of your guitar. 
  Set the width to 150px, the height to 120px, the background-color to Goldenrod, and the border-radius to 50%. */
  .guitar {
    width: 150px;
    height: 120px;
    background-color: goldenrod;
    border-radius: 50%;
  }

  /* Select the id with value guitar-left, and set the position to absolute and the left to 0px. */
  #guitar-left {
    position: absolute;
    left: 0px;
  }

  /* Select the id with value guitar-right, and also set position to absolute. This time, set left to 100px. */
  #guitar-right {
    position: absolute;
    left: 100px;
  }

  /* Now you need to move the bar icons into place. Create a class selector for the fa-bars class. 
  Set the display to block, the margin-top to 30%, and the margin-left to 40%. */
  .fa-bars {
    display: block;
    margin-top: 30%;
    margin-left: 40%;
  }

  /* Use an id selector to create a guitar-neck rule. Set the width to 200px, the height to 30px, and the background-color to #D2691E. */
  #guitar-neck {
    width: 200px;
    height: 30px;
    background-color: #d2691e;
    /* Now move the guitar-neck with a position of absolute, a top value of 45px, and a left value of 200px. */
    position: absolute;
    top: 45px;
    left: 200px;
    /* Give the guitar-neck a z-index of 3. */
    z-index: 3;
  }

  /* Time to style your eyes elements. Use a class selector to set the width to 35px, the height to 20px, 
  the background-color to #8B4513, and the border-radius to 20px 50%. */
  .eyes {
    width: 35px;
    height: 20px;
    background-color: #8B4513;
    border-radius: 20px 50%;
  }

  /* Target the class with value right and set the position to absolute, top to 15px, and right to 30px. */
  .right {
    position: absolute;
    top: 15px;
    right: 30px;
  }

  /* For the class with value left, create the selector and set the position to absolute, the top to 15px, and the left to 30px. */
  .left {
    position: absolute;
    top: 15px;
    left: 30px;
  }

  /* One last step. The FontAwesome icons are a little too small. Target all of them with a class selector for fas, and set the font-size to 30px. */
  .fas {
    font-size: 30px;
  }